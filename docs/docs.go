// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/account": {
            "get": {
                "description": "Get Account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get Account",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Account"
                            }
                        }
                    }
                }
            }
        },
        "/api/delete/{mobile}": {
            "post": {
                "description": "API URL For Delete Account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Delete Account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "mobile",
                        "name": "mobile",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/models.Account"
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "description": "API URL For Login Account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Login Account",
                "parameters": [
                    {
                        "description": "Account Data",
                        "name": "Account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AccountLogin"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/models.AccountLogin"
                        }
                    }
                }
            }
        },
        "/api/money-status": {
            "get": {
                "description": "API URL For Money Status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Money Status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MoneyStatus"
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "description": "API URL For Create New Account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Create New Account",
                "parameters": [
                    {
                        "description": "Account Data",
                        "name": "Account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AccountRegister"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.AccountRegister"
                        }
                    }
                }
            }
        },
        "/api/transaction": {
            "get": {
                "description": "API URL For Transaction Account Buyer Or Seller",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Transaction Per Account Buyer Or Seller",
                "parameters": [
                    {
                        "type": "string",
                        "description": "mobile",
                        "name": "receiver",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "mobile",
                        "name": "depositor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Transaction"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "API URL For Create Transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Create Transaction",
                "parameters": [
                    {
                        "description": "Transaction Data",
                        "name": "Account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Transaction"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Transaction"
                        }
                    }
                }
            }
        },
        "/api/transaction/delete/multiple": {
            "post": {
                "description": "API URL For Delete Multiple Transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Delete Multiple Transaction",
                "parameters": [
                    {
                        "description": "Transaction Data",
                        "name": "Account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TransactionID"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    }
                }
            }
        },
        "/api/transactions": {
            "get": {
                "description": "API URL For All Transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "All Transaction",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/models.Transaction"
                        }
                    }
                }
            }
        },
        "/api/update/{account_mobile}": {
            "post": {
                "description": "API URL For Update Account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Update Account",
                "parameters": [
                    {
                        "description": "Account Data",
                        "name": "Account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Account"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/models.Account"
                        }
                    }
                }
            }
        },
        "/api/verification": {
            "post": {
                "description": "API URL For Verification Account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Verification Account",
                "parameters": [
                    {
                        "description": "Account Data",
                        "name": "Account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AccountVerification"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/models.AccountVerification"
                        }
                    }
                }
            }
        },
        "/api/withdraw": {
            "get": {
                "description": "API URL For Withdraw History",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Withdraw History",
                "parameters": [
                    {
                        "type": "string",
                        "description": "mobile",
                        "name": "seller",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Withdraw"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "API URL For Create Withdraw",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Create Withdraw",
                "parameters": [
                    {
                        "description": "Transaction Data",
                        "name": "Account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Withdraw"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Withdraw"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Account": {
            "type": "object",
            "properties": {
                "account_mobile": {
                    "type": "string"
                },
                "account_name": {
                    "type": "string"
                },
                "account_status": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                }
            }
        },
        "models.AccountLogin": {
            "type": "object",
            "properties": {
                "account_mobile": {
                    "type": "string"
                }
            }
        },
        "models.AccountRegister": {
            "type": "object",
            "properties": {
                "account_mobile": {
                    "type": "string"
                },
                "account_name": {
                    "type": "string"
                },
                "account_status": {
                    "type": "string"
                }
            }
        },
        "models.AccountVerification": {
            "type": "object",
            "properties": {
                "account_mobile": {
                    "type": "string"
                }
            }
        },
        "models.MoneyStatus": {
            "type": "object",
            "properties": {
                "uang_buyer": {
                    "type": "integer"
                },
                "uang_seller": {
                    "type": "integer"
                },
                "uang_sisa": {
                    "type": "integer"
                }
            }
        },
        "models.Transaction": {
            "type": "object",
            "properties": {
                "ddepositor": {
                    "$ref": "#/definitions/models.Account"
                },
                "dreceiver": {
                    "$ref": "#/definitions/models.Account"
                },
                "id": {
                    "type": "integer"
                },
                "is_debit": {
                    "type": "boolean"
                },
                "transactionName": {
                    "type": "string"
                },
                "transaction_amount": {
                    "type": "integer"
                },
                "transaction_date": {
                    "type": "string"
                },
                "transaction_depositor": {
                    "type": "string"
                },
                "transaction_receiver": {
                    "type": "string"
                }
            }
        },
        "models.TransactionID": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Withdraw": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "s": {
                    "$ref": "#/definitions/models.Account"
                },
                "seller_id": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
